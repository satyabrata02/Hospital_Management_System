# Generated by Django 4.2 on 2024-01-20 15:01

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('patientid', models.IntegerField(primary_key=True, serialize=False)),
                ('drname', models.CharField(max_length=50)),
                ('symptoms', models.CharField(max_length=700)),
                ('diagnosis', models.CharField(max_length=500)),
                ('medicines', models.CharField(max_length=500)),
                ('addmissionreq', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Patientbedadm',
            fields=[
                ('patientid', models.IntegerField(primary_key=True, serialize=False)),
                ('admitdate', models.DateTimeField()),
                ('prelname', models.CharField(max_length=50)),
                ('relrelation', models.CharField(max_length=50)),
                ('prephoneno', models.BigIntegerField()),
                ('roomno', models.CharField(max_length=10)),
                ('assignedstaffs', models.CharField(max_length=50)),
                ('termsorcond', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Patientbill',
            fields=[
                ('patientid', models.IntegerField(primary_key=True, serialize=False)),
                ('dischargedate', models.DateTimeField()),
                ('days', models.IntegerField()),
                ('wardcharge', models.FloatField()),
                ('drfee', models.FloatField()),
                ('srvcharge', models.FloatField()),
                ('paidamt', models.FloatField(default=0.0)),
                ('totalamt', models.FloatField()),
                ('payment', models.CharField(default='not paid', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Patientinfo',
            fields=[
                ('admissiondate', models.DateTimeField()),
                ('patientid', models.AutoField(primary_key=True, serialize=False)),
                ('pname', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=500)),
                ('phonenumber', models.BigIntegerField()),
                ('age', models.IntegerField()),
                ('gender', models.CharField(max_length=20)),
                ('bloodgroup', models.CharField(max_length=10)),
                ('disease', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('phno', models.BigIntegerField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_name', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
